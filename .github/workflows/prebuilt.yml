name: Prebuilt Binaries

on:
  push:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    name: Prebuilt Binaries for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
    permissions:
      contents: write
          
    steps:
      - uses: actions/checkout@v2


      - name: Fetch Submodules
        run: git submodule update --init
        
      - name: Install Clang
        if: ${{ runner.os != 'macOS' }}
        uses: egor-tensin/setup-clang@v1
        
      - name: Install Automake
        if: ${{ runner.os != 'windows' }}
        uses: lyricwulf/abc@v1
        with:
          linux: automake
          macos: automake
        
      - name: Build (Debug)
        if: ${{ runner.os == 'windows' }}
        run: |
          set OVERRIDE_BUILD_MODE="DEBUG"
          set OVERRIDE_TEST="NONE"
          make

      - name: Build (Debug)
        if: ${{ runner.os != 'windows' }}
        run: |
          export OVERRIDE_BUILD_MODE=DEBUG
          export OVERRIDE_TEST=NONE
          make

      - name: Publish (Debug)
        run: |
          cd lib
          mkdir ../${{ matrix.os }}-$(git rev-parse --short "$GITHUB_SHA")-debug
          mv * ../${{ matrix.os }}-$(git rev-parse --short "$GITHUB_SHA")-debug
          mv ../${{ matrix.os }}-$(git rev-parse --short "$GITHUB_SHA")-debug .
          
          git init
          git branch -m prebuilts
          git config --global user.email "prs.ttg+gh@pm.me" # We'll just pretend it's me for now
          git config --global user.name "Th3T3chn0G1t"
          git remote add origin https://git:${{ secrets.GITHUB_TOKEN }}@github.com/Th3T3chn0G1t/GenesisEngine
          git pull origin prebuilts
          git add *
          git commit -m "Binary build from latest changes"
          git push -u origin prebuilts

          cd ..
          rm -rf lib/*
          make clean

      - name: Build (Release)
        if: ${{ runner.os == 'windows' }}
        run: |
          set OVERRIDE_BUILD_MODE="RELEASE"
          set OVERRIDE_TEST="NONE"
          make

      - name: Build (Release)
# Linux build has file corruption issues
#       if: ${{ runner.os != 'windows' }}
        if: ${{ runner.os == 'macOS' }}
        run: |
          export OVERRIDE_BUILD_MODE=RELEASE
          export OVERRIDE_TEST=NONE
          make

      - name: Publish (Release)
        if: ${{ runner.os != 'ubuntu' }}
        run: |
          cd lib
          mkdir ../${{ runner.os }}-$(git rev-parse --short "$GITHUB_SHA")-release
          mv * ../${{ runner.os }}-$(git rev-parse --short "$GITHUB_SHA")-release
          mv ../${{ runner.os }}-$(git rev-parse --short "$GITHUB_SHA")-release .

          git init
          git branch -m prebuilts
          git config --global user.email "prs.ttg+gh@pm.me" # We'll just pretend it's me for now
          git config --global user.name "Th3T3chn0G1t"
          git remote add origin https://git:${{ secrets.GITHUB_TOKEN }}@github.com/Th3T3chn0G1t/GenesisEngine
          git pull origin prebuilts
          git add *
          git commit -m "Binary build from latest changes"
          git push -u origin prebuilts
